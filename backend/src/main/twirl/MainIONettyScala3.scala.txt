@(groupId: String, addDocumentation: Boolean, addMetrics: Boolean)
package @groupId

@if(addMetrics){import cats.effect.std.Dispatcher}
import cats.effect.{ExitCode, IO, IOApp}
import sttp.tapir.server.netty.cats.@if(addMetrics){{NettyCatsServer, NettyCatsServerOptions}}else{NettyCatsServer}

@if(addMetrics){import java.net.InetSocketAddress}
import scala.io.StdIn

object Main extends IOApp:
  val port = sys.env.get("http.port").map(_.toInt).getOrElse(8080)

  override def run(args: List[String]): IO[ExitCode] =
    @if(addMetrics){
      Dispatcher[IO].map( d => { NettyCatsServer.apply[IO, InetSocketAddress]({
        NettyCatsServerOptions.customiseInterceptors(d)
          .metricsInterceptor(Endpoints.prometheusMetrics.metricsInterceptor())
          .options
      }) })
    } else {
      NettyCatsServer
        .io()
    }
      .use { server =>
        for
          bind <- server
            .port(port)
            .host("localhost")
            .addEndpoints(Endpoints.all)
            .start()
          _ <- IO.blocking {
            println(s"@if(addDocumentation){Go to http://localhost:${bind.port}/docs to open SwaggerUI.}else{Server started at http://localhost:${bind.port}.} Press ENTER key to exit.")
            StdIn.readLine()
          }
          _ <- bind.stop()
        yield bind
      }
      .as(ExitCode.Success)
